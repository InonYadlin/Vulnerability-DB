import requests
import time
from config import *

# VirusTotal MD5 Check Function
def check_hash_on_virustotal(hash, api_key):
    """Checks the MD5 hash on VirusTotal and formats the response."""
    url = f"https://www.virustotal.com/api/v3/files/{hash}"
    headers = {
        "x-apikey": api_key
    }
    
    response = requests.get(url, headers=headers)
    
    if response.status_code == 200:
        # If the response is successful, return the important scan details
        data = response.json()
        scan_data = {
            "md5": data.get("data", {}).get("attributes", {}).get("md5", "N/A"),
            "sha256": data.get("data", {}).get("attributes", {}).get("sha256", "N/A"),
            "last_analysis_stats": data.get("data", {}).get("attributes", {}).get("last_analysis_stats", {}),
            "scan_date": data.get("data", {}).get("attributes", {}).get("last_analysis_date", "N/A")
        }
        return {"result": "success", "data": scan_data}
    
    elif response.status_code == 404:
        return {"result": "error", "message": f"File with hash {hash} not found in VirusTotal."}
    
    else:
        return {"result": "error", "message": f"Error {response.status_code}: Unable to fetch results from VirusTotal."}
    
def submit_file_to_sandbox(file_path):
    url = "https://www.virustotal.com/api/v3/files"
    headers = {
        "x-apikey": VIRUSTOTAL_API_KEY,
    }
    
    with open(file_path, 'rb') as file:
        for i in range(5):  # Retry up to 5 times
            try:
                response = requests.post(url, headers=headers, files={"file": file})
                response.raise_for_status()  # Raise an error for bad responses
                return response.json()
            except requests.exceptions.ConnectionError as e:
                print(f"Connection error: {e}. Retrying in {2 ** i} seconds...")
                time.sleep(2 ** i)  # Exponential backoff
        return {"error": "Failed to submit file after several attempts."}

def get_sandbox_analysis_results(resource):
    """Retrieves analysis results from the VirusTotal Sandbox."""

    url = f"https://www.virustotal.com/api/v3/analyses/{resource}"
    headers = {
        "x-apikey": VIRUSTOTAL_API_KEY,
    }

    response = requests.get(url, headers=headers)

    if response.status_code == 200:
        return response.json()
    else:
        return {"error": f"Error {response.status_code}: Unable to fetch results."}
    
    