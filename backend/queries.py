from db import fetch_collection, connect_to_mongo, close_mongo_connection
from config import NAME_FIELD, BASIC_FIELDS, DATABASE_NAME, COLLECTION_NAME, MONGO_URI

MONGO_URI = 'mongodb://localhost:27017/'

# Query Building Functions
def build_regex_query(search_term, field):
    """Builds a regex query for case-insensitive search."""
    return {field: {"$regex": search_term, "$options": "i"}}

def build_or_query(search_term, fields):
    """Builds a query using OR conditions for multiple fields."""
    return {"$or": [{field: {"$regex": search_term, "$options": "i"}} for field in fields]}

# Extraction Functions
def extract_vulnerability_names(results):
    """Extracts the names of vulnerabilities from the search results."""
    vulnerabilities = []
    for vuln in results:
        if 'objects' in vuln:
            for obj in vuln['objects']:
                if 'name' in obj and obj['name'] not in vulnerabilities:
                    vulnerabilities.append(obj['name'])
    return vulnerabilities

def extract_vulnerability_objects(results):
    """Extracts all vulnerability objects from the search results."""
    vulnerabilities = []
    for vuln in results:
        if 'objects' in vuln:
            vulnerabilities.extend(vuln['objects'])
    return vulnerabilities

# Search Functions
def search_by_name(search_term, collection):
    """Searches vulnerabilities by name."""
    query = build_regex_query(search_term, NAME_FIELD)
    results = collection.find(query)
    return extract_vulnerability_names(results)

def search_by_other_fields(search_term, collection, fields):
    """Searches vulnerabilities by other basic fields."""
    query = build_or_query(search_term, fields)
    results = collection.find(query)
    return extract_vulnerability_names(results)

def search_vulnerabilities(search_term):
    """Performs the search by name and other fields."""
    client = connect_to_mongo(MONGO_URI)
    if client is None:
        return []
    
    collection = fetch_collection(client, DATABASE_NAME, COLLECTION_NAME)

    # Search by name
    vulnerabilities = search_by_name(search_term, collection)
    
    # If fewer than 13 results, search by other fields
    if len(vulnerabilities) < 13:
        additional_results = search_by_other_fields(search_term, collection, BASIC_FIELDS)
        vulnerabilities = list(set(vulnerabilities + additional_results))

    close_mongo_connection(client)
    return vulnerabilities

def search_by_id(vuln_id, collection):
    """Searches vulnerabilities by ID."""
    query = {"objects.id": vuln_id}
    results = collection.find(query)
    return extract_vulnerability_objects(results)

def list_by_platform(platform, collection):
    """Lists vulnerabilities by platform."""
    query = {"objects.x_mitre_platforms": platform}
    results = collection.find(query)
    return extract_vulnerability_names(results)

def list_by_mitre_phase(phase, collection):
    """Lists vulnerabilities by MITRE phase."""
    query = {"objects.kill_chain_phases.phase_name": phase}
    results = collection.find(query)
    return extract_vulnerability_names(results)