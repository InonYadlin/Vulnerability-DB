import React, { useState } from 'react';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faSearch } from '@fortawesome/free-solid-svg-icons';
import { Link } from 'react-router-dom';
import SearchComponent from './SearchComponent'; 
import './GlobalStyles.css'; 

function SearchBar() {
  const [searchTerm, setSearchTerm] = useState('');
  const [sortOption, setSortOption] = useState('A-Z');
  const [limit, setLimit] = useState(10);
  const [results, setResults] = useState([]);

  const handleInputChange = (event) => {
    // Setting the search term to what the user wrote
    setSearchTerm(event.target.value);
  };

  const handleSearchClick = async () => {
    // Getting the results of the search from the backend
    const searchResults = await SearchComponent(searchTerm);
    setResults(sortResults(searchResults, sortOption));
  };

  const handleSortChange = (event) => {
    // Handling a change in the sorting
    const selectedSort = event.target.value;
    setSortOption(selectedSort);
    setResults(sortResults(results, selectedSort));
  };

  const handleLimitChange = (event) => {
    // Changing the limit of results which are shown
    setLimit(parseInt(event.target.value, 10));
  };

  const sortResults = (resultsArray, option) => {
    // Sorting the results
    return [...resultsArray].sort((a, b) =>
      option === 'A-Z' ? a.localeCompare(b) : b.localeCompare(a)
    );
  };

  const formatForURL = (result) => {
    // Replace slashes with tilde for URL
    return result.replace(/\//g, '~');
  };

  return (
    <div className="search-container">
      <div className="top-row">
        <div className="input-wrapper">
          <input
            type="text"
            placeholder="Search..."
            value={searchTerm}
            onChange={handleInputChange}
            className="input"
          />
          <FontAwesomeIcon
            icon={faSearch}
            onClick={handleSearchClick}
            className="icon"
          />
        </div>

        <div className="sort-wrapper">
          <select value={sortOption} onChange={handleSortChange} className="select">
            <option value="A-Z">Sort A-Z</option>
            <option value="Z-A">Sort Z-A</option>
          </select>
        </div>

        <div className="limit-wrapper">
          <select value={limit} onChange={handleLimitChange} className="select">
            <option value={10}>Limit: 10</option>
            <option value={20}>Limit: 20</option>
            <option value={results.length}>Limit: All</option>
          </select>
        </div>
      </div>

      <div className="results-container">
        {results.length > 0 ? (
          results.slice(0, limit).map((result, index) => (
            <div key={`${result}-${index}`} className="result-item">
              <Link to={`/result/${formatForURL(result)}`} className="link">
                {result}
              </Link>
            </div>
          ))
        ) : (
          <div className="no-results">No results found</div>
        )}
      </div>
    </div>
  );
}

export default SearchBar;
